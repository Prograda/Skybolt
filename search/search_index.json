{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Overview","text":"<p>Skybolt is a 3D geospatial application for simulating and visualizing dynamic entities in planetary environments.</p> <p>With Skybolt you can:</p> <ul> <li>Create scenarios featuring dynamic 3D objects with modular components and properties.</li> <li>Interact with objects via 3D geospatial user interface.</li> <li>Render photoreal environments featuring terrain, ocean, buildings, roads, vegetation, and clouds.</li> <li>Import and visualize data from external sources including CSV files and CIGI host applications.</li> <li>Extend functionality with C++ and Python plugins.</li> </ul>"},{"location":"index.html#getting-started","title":"Getting Started","text":"<p>Continue to the Getting Started guide.</p>"},{"location":"index.html#contact","title":"Contact","text":"<p>To submit a bug report, please raise an issue on the GitHub repository. For general discussion, please post on our GitHub discussions page. For business enquiries, please use our contact form.</p>"},{"location":"index.html#license","title":"License","text":"<p>This project is licensed under the Mozilla Public License Version 2.0.</p>"},{"location":"architecture.html","title":"Architecture","text":""},{"location":"architecture.html#core","title":"Core","text":"<p>The Skybolt engine is based on a flexible entity-component system, which makes it easy to represent both physical and non-physical objects in the world.</p>"},{"location":"architecture.html#skyboltsim","title":"SkyboltSim","text":"<p>At the heart of the engine, the <code>SkyboltSim</code> library manages the simulation loop and handles dynamics and system state updates.</p> <p>The main aspects of the simulation architecture are:</p> <ul> <li>Simulation Loop: Continuously updates the state of entities based on dynamics, user input, and external data.</li> <li>Systems: Handle core processes such as dynamics simulation.</li> <li>Entities: Objects in the simulation. Each entity can represent a physical object (e.g. aircraft, ship) or an non-physical object that performs a function.</li> <li>Components: Modular building blocks giving functionality to entities. Components may define an entity's position, behavior, appearance, or other characteristics.</li> </ul>"},{"location":"architecture.html#skyboltvis","title":"SkyboltVis","text":"<p>The <code>SkyboltVis</code> library renders visual represenations of entities. The renderer is built to provide physically plausible imagery from ground level to space. The renderer uses tile-based streaming from geospatial sources, allowing efficient real-time loading of terrain and features such as buildings, roads, rivers and lakes.</p> <p>Environments are rendered use multiple physically-based lighting techniques:</p> <ul> <li>Hard-surface BRDFs to render hard objects like aircraft, terrain and buildings</li> <li>Planetary atmospheric scattering model</li> <li>Volumetric cloud ray-marcher</li> </ul> <p>Under the hood, <code>SkyboltVis</code> uses OpenSceneGraph to manage scene graph state, issue draw calls, and handle 2D/3D asset file IO.</p>"},{"location":"architecture.html#skyboltengine","title":"SkyboltEngine","text":"<p>The <code>SkyboltEngine</code> library ties together <code>SkyboltSim</code> and <code>SkyboltVis</code>, and provides engine-level functionality like user input, scenario management, and plugin support.</p>"},{"location":"architecture.html#plugins","title":"Plugins","text":"<p>To support a wide variety of use cases, the simulation engine is extensible through C++ and Python plugins.</p> <ul> <li>C++ Plugins: Leverages high-performance code for simulation-critical functionality.</li> <li>Python Plugins: For rapid prototyping, scripting, and extending functionality, for example adding new entity component types.</li> </ul>"},{"location":"architecture.html#graphical-user-interface-gui","title":"Graphical User Interface (GUI)","text":"<p>The application features a Qt-based graphical user interface that allows users to interact with entities in the 3D environment. The <code>SkyboltQt</code> library provides funcionality for GUI widgets and bindings between the GUI and the engine.</p>"},{"location":"asset_packages.html","title":"Asset Packages","text":"<p>At runtime, Skybolt uses assets such as meshes, textures, and shaders. These assets are organized into packages. Each package is a folder containing a hierarchy of asset files on disk.</p> <p>Some packages are requied to run Skybolt, while others are optional. The pre-built version of Skybolt ships with the minimum set of required packages. If you compiled Skybolt from source, please ensure Skybolt can find the required packages.</p> <p>Skybolt searches for asset packages in these locations:</p> <ol> <li><code>&lt;CurrentWorkingDirectory&gt;/Assets</code></li> <li>Paths in the <code>SKYBOLT_ASSETS_PATH</code> environment variable</li> </ol>"},{"location":"asset_packages.html#required-packages","title":"Required Packages","text":""},{"location":"asset_packages.html#core","title":"\"Core\"","text":"<p>Core assets including fonts, icons, shaders and python modules. Located under the <code>Assets</code> folder in the main repository.</p>"},{"location":"asset_packages.html#packages-in-the-skyboltassets-repository","title":"Packages in the SkyboltAssets repository","text":"<p>These packages required for running the <code>SkyboltQtApp</code> and example applications. These are located in the SkyboltAssets repository. SkyboltAssets uses DVC for remote storage and retrieval of large files which are not stored in the git repository itself.</p> <p>To checkout the SktboltAssets repository:</p> <ol> <li>If you do not already have DVC installed, run <code>pip install dvc[s3]</code> to install with pip</li> <li>Clone SkyboltAssets and checkout desired git branch/tag</li> <li>Run <code>dvc pull</code> command in the SkyboltAssets root directory to fetch the remote files</li> </ol>"},{"location":"asset_packages.html#optional-packages","title":"Optional Packages","text":""},{"location":"asset_packages.html#nlcdlandcover","title":"\"NLCDLandCover\"","text":"<p>Land cover tiles for USA. Used by Skybolt to place trees on terrain in forest areas. This package can be downloaded here.</p>"},{"location":"asset_packages.html#seattle","title":"\"Seattle\"","text":"<p>Map features (buildings, roads, lakes etc) for the city of Seattle. These features were generated from OpenStreetMap data using Skybolt's <code>MapFeaturesConverter</code> tool. This package can be downloaded here.</p>"},{"location":"building_from_source.html","title":"Building from Source","text":"<p>Skybolt uses the CMake meta-build system and the Conan package manager.</p> <p>A list of skybolt dependencies can be found in <code>conanfile.py</code>.</p>"},{"location":"building_from_source.html#1-install-conan","title":"1. Install Conan","text":"<p>Install with pip: <code>pip3 install conan</code>.</p>"},{"location":"building_from_source.html#2-build-skybolt","title":"2. Build Skybolt","text":"<p>Use conan to build Skybolt. Under the hood this will execute CMake to generate project files for your IDE and compile the project.</p> <pre><code>conan build %SKYBOLT_SOURCE% --output-folder=%SKYBOLT_BUILD% --lockfile-partial\n</code></pre> <p>Custom configuration options may be supplied with the <code>-o</code> argument, for example:</p> <pre><code>conan build %SKYBOLT_SOURCE% --output-folder=%SKYBOLT_BUILD%  --lockfile-partial -o openscenegraph-mr:shared=True -o enable_python=True -o enable_qt=True -o enable_bullet=True -o enable_cigi=True\n</code></pre> <p>Please refer to <code>conanfile.py</code> for a full list of available configuration options.</p>"},{"location":"building_from_source.html#3-install-asset-packages","title":"3. Install Asset Packages","text":"<p>Skybolt needs a minimum set of required asset packages to run. These packages are shipped with the pre-built Skybolt version, but must be installed manually when building from source. See Asset Packages for details.</p>"},{"location":"configuration.html","title":"Configuration","text":""},{"location":"configuration.html#engine-settings","title":"Engine Settings","text":"<p>Engine settings are stored in a <code>Settings.json</code> json file, which may be manually edited with a text editor, or edited in the <code>SkyboltQtApp</code> using the <code>Tools-&gt;Settings</code> dialog.</p> <p>The settings file can be loaded by Skybolt applications with the <code>--settingsFile</code> commandline option. If the option is not specified, a default <code>Settings.json</code> in the Operating System user's home directory will be used. On windows, this is located at <code>C:/Users/%USERNAME%/AppData/Local/Skybolt/Settings.json</code>.</p>"},{"location":"configuration.html#environment-variables","title":"Environment Variables","text":"<ul> <li><code>SKYBOLT_PLUGINS_PATH</code> sets plugin search locations. The /plugins folder in the application executable's directory is searched in additional to this path.</li> <li><code>SKYBOLT_CACHE_DIR</code> sets the directory where cached terrain tiles are read from and written to. If not set, the default directory is C:/Users/%USERNAME%/AppData/Local/Skybolt/Cache</li> <li><code>SKYBOLT_ASSETS_PATH</code> sets the search locations for asset packages. </li> <li><code>SKYBOLT_MAX_CORES</code> sets the maximum number of CPU cores the engine may use. If not set, all cores are used.</li> </ul>"},{"location":"configuration.html#third-party-map-data","title":"Third Party Map Data","text":"<p>By default, the <code>PlanetEarth</code> Skybolt entity uses mapbox for albedo and elevation data. To use mapbox, you must acquire an API key from Mapbox. Without an API key, the tiles will not download, the the planet will not render correctly. If desired, <code>PlanetEarth</code> can be edited to use Bing maps for albedo instead. A bing key can be obtained from Microsoft.</p> <p>API keys for third party map sources are stored in the engine settings file <code>Settings.json</code>.</p>"},{"location":"getting_started.html","title":"Getting Started","text":""},{"location":"getting_started.html#obtaining-skybolt","title":"Obtaining Skybolt","text":"<p>Skybolt can be obtained using one of the following methods:</p> <ul> <li>Download a pre-built version on supported operating systems</li> <li>Build from source</li> </ul>"},{"location":"getting_started.html#running-the-gui-application","title":"Running the GUI Application","text":"<p>The main Skybolt GUI application can be started by running the <code>SkyboltQtApp</code> executable from the <code>bin</code> folder.</p> <p>To explore example scenarios, navigate to the <code>/Scenarios</code> folder, where you will find pre-configured scenarios that demonstrate use cases of the application.</p>"},{"location":"getting_started.html#writing-plugins","title":"Writing Plugins","text":"<p>Skybolt supports Python and C++ plugins as follows:</p>"},{"location":"getting_started.html#python","title":"Python","text":"<p>Skybolt allows users to implement new Entity Component types in Python. These components are initialized when the entity is added to the scene, updated each time step, and destroyed when the entity is removed.</p> <p>The <code>ReplaySource</code> is an example of a component implemented in Python. This component is responsible for replaying simulation data from a CSV file. See <code>Assets/Core/Scripts/replay_source.py</code>.</p> <p>At runtime, Skybolt searches for python plugin modules inside asset packages under <code>&lt;AssetPackage&gt;/Scripts</code>.</p>"},{"location":"getting_started.html#c","title":"C++","text":"<p>Skybolt allows develpers to add new engine functionality by writing C++ plugins. Please refer to <code>src/Skybolt/SkyboltEnginePlugins/</code> for examples.</p> <p>At runtime, Skybolt searches for plugins under the <code>bin/plugins</code> folder.</p>"},{"location":"getting_started.html#using-python-api-without-the-gui","title":"Using Python API without the GUI","text":"<p>Skybolt has a python API which allows the engine to be used outside the <code>SkyboltQtApp</code> application. Refer to <code>src/SkyboltExamples/MinimalPython/MinimalPython.py</code> as an example. See also Python API documentation.</p>"},{"location":"python_api/index.html","title":"Python API","text":"<p>Skybolt comes with the following Python modules:</p> <ul> <li>skybolt - provides access to Skybolt Engine C++ functionality.</li> <li>skybolt_util - auxilary utility functionality.</li> </ul>"},{"location":"python_api/skybolt.html","title":"skybolt","text":"<p>Python API for accessing Skybolt Engine C++ functionality.</p>"},{"location":"python_api/skybolt.html#skybolt-attributes","title":"Attributes","text":""},{"location":"python_api/skybolt.html#skybolt.LoadAcrossMultipleFrames","title":"<code>LoadAcrossMultipleFrames: LoadTimingPolicy</code>  <code>module-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.LoadBeforeRender","title":"<code>LoadBeforeRender: LoadTimingPolicy</code>  <code>module-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt-classes","title":"Classes","text":""},{"location":"python_api/skybolt.html#skybolt.Box3d","title":"<code>Box3d</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Box3d-attributes","title":"Attributes","text":""},{"location":"python_api/skybolt.html#skybolt.Box3d.maximum","title":"<code>maximum: Vector3</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Box3d.minimum","title":"<code>minimum: Vector3</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Box3d-functions","title":"Functions","text":""},{"location":"python_api/skybolt.html#skybolt.Box3d.center","title":"<code>center()</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Box3d.merge","title":"<code>merge(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Box3d.size","title":"<code>size()</code>","text":""},{"location":"python_api/skybolt.html#skybolt.CameraComponent","title":"<code>CameraComponent</code>","text":"<p>               Bases: <code>Component</code></p>"},{"location":"python_api/skybolt.html#skybolt.CameraComponent-attributes","title":"Attributes","text":""},{"location":"python_api/skybolt.html#skybolt.CameraComponent.state","title":"<code>state: CameraState</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.CameraControllerComponent","title":"<code>CameraControllerComponent</code>","text":"<p>               Bases: <code>Component</code>, <code>CameraControllerSelector</code></p>"},{"location":"python_api/skybolt.html#skybolt.CameraControllerSelector","title":"<code>CameraControllerSelector</code>","text":""},{"location":"python_api/skybolt.html#skybolt.CameraControllerSelector-functions","title":"Functions","text":""},{"location":"python_api/skybolt.html#skybolt.CameraControllerSelector.getSelectedControllerName","title":"<code>getSelectedControllerName()</code>","text":""},{"location":"python_api/skybolt.html#skybolt.CameraControllerSelector.selectController","title":"<code>selectController(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.CameraControllerSelector.setTargetId","title":"<code>setTargetId(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.CameraState","title":"<code>CameraState</code>","text":""},{"location":"python_api/skybolt.html#skybolt.CameraState-attributes","title":"Attributes","text":""},{"location":"python_api/skybolt.html#skybolt.CameraState.farClipDistance","title":"<code>farClipDistance: float</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.CameraState.fovY","title":"<code>fovY: float</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.CameraState.nearClipDistance","title":"<code>nearClipDistance: float</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Component","title":"<code>Component</code>","text":"<p>Base class for components which can be attached to an <code>Entity</code></p>"},{"location":"python_api/skybolt.html#skybolt.Component-functions","title":"Functions","text":""},{"location":"python_api/skybolt.html#skybolt.Component.setSimTime","title":"<code>setSimTime(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.EngineRoot","title":"<code>EngineRoot</code>","text":""},{"location":"python_api/skybolt.html#skybolt.EngineRoot-attributes","title":"Attributes","text":""},{"location":"python_api/skybolt.html#skybolt.EngineRoot.entityFactory","title":"<code>entityFactory: EntityFactory</code>  <code>property</code>","text":""},{"location":"python_api/skybolt.html#skybolt.EngineRoot.scenario","title":"<code>scenario: Scenario</code>  <code>property</code>","text":""},{"location":"python_api/skybolt.html#skybolt.EngineRoot.world","title":"<code>world: World</code>  <code>property</code>","text":""},{"location":"python_api/skybolt.html#skybolt.EngineRoot-functions","title":"Functions","text":""},{"location":"python_api/skybolt.html#skybolt.EngineRoot.locateFile","title":"<code>locateFile(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Entity","title":"<code>Entity</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Entity-attributes","title":"Attributes","text":""},{"location":"python_api/skybolt.html#skybolt.Entity.dynamicsEnabled","title":"<code>dynamicsEnabled: bool</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Entity-functions","title":"Functions","text":""},{"location":"python_api/skybolt.html#skybolt.Entity.addComponent","title":"<code>addComponent(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Entity.getComponents","title":"<code>getComponents()</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Entity.getComponentsOfType","title":"<code>getComponentsOfType(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Entity.getFirstComponentOfType","title":"<code>getFirstComponentOfType(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Entity.getId","title":"<code>getId()</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Entity.getName","title":"<code>getName()</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Entity.getOrientation","title":"<code>getOrientation()</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Entity.getPosition","title":"<code>getPosition()</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Entity.setOrientation","title":"<code>setOrientation(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Entity.setPosition","title":"<code>setPosition(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.EntityFactory","title":"<code>EntityFactory</code>","text":"<p>Class responsible for creating <code>Entity</code> instances based on a template name</p>"},{"location":"python_api/skybolt.html#skybolt.EntityFactory-functions","title":"Functions","text":""},{"location":"python_api/skybolt.html#skybolt.EntityFactory.createEntity","title":"<code>createEntity(templateName, name='', position=..., orientation=..., id=...)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.EntityId","title":"<code>EntityId</code>","text":""},{"location":"python_api/skybolt.html#skybolt.EntityId-attributes","title":"Attributes","text":""},{"location":"python_api/skybolt.html#skybolt.EntityId.applicationId","title":"<code>applicationId: int</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.EntityId.entityId","title":"<code>entityId: int</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.EntityTargeter","title":"<code>EntityTargeter</code>","text":"<p>Interface for a class which references a target <code>Entity</code> by <code>EntityId</code></p>"},{"location":"python_api/skybolt.html#skybolt.EntityTargeter-functions","title":"Functions","text":""},{"location":"python_api/skybolt.html#skybolt.EntityTargeter.getTargetId","title":"<code>getTargetId()</code>","text":""},{"location":"python_api/skybolt.html#skybolt.EntityTargeter.getTargetName","title":"<code>getTargetName()</code>","text":""},{"location":"python_api/skybolt.html#skybolt.EntityTargeter.setTargetId","title":"<code>setTargetId(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.EntityTargeter.setTargetName","title":"<code>setTargetName(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Frustum","title":"<code>Frustum</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Frustum-attributes","title":"Attributes","text":""},{"location":"python_api/skybolt.html#skybolt.Frustum.fieldOfViewHorizontal","title":"<code>fieldOfViewHorizontal: float</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Frustum.fieldOfViewVertical","title":"<code>fieldOfViewVertical: float</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Frustum.orientation","title":"<code>orientation: Quaternion</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Frustum.origin","title":"<code>origin: Vector3</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.GeocentricOrientation","title":"<code>GeocentricOrientation</code>","text":"<p>               Bases: <code>Orientation</code></p>"},{"location":"python_api/skybolt.html#skybolt.GeocentricOrientation-attributes","title":"Attributes","text":""},{"location":"python_api/skybolt.html#skybolt.GeocentricOrientation.orientation","title":"<code>orientation: Quaternion</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.GeocentricPosition","title":"<code>GeocentricPosition</code>","text":"<p>               Bases: <code>Position</code></p>"},{"location":"python_api/skybolt.html#skybolt.GeocentricPosition-attributes","title":"Attributes","text":""},{"location":"python_api/skybolt.html#skybolt.GeocentricPosition.position","title":"<code>position: Vector3</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.LatLon","title":"<code>LatLon</code>","text":"<p>Represents a 2D location on a planet location as a latitude and longitude in radians</p>"},{"location":"python_api/skybolt.html#skybolt.LatLon-attributes","title":"Attributes","text":""},{"location":"python_api/skybolt.html#skybolt.LatLon.lat","title":"<code>lat: float</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.LatLon.lon","title":"<code>lon: float</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.LatLonAlt","title":"<code>LatLonAlt</code>","text":"<p>Represents a 3D location on a planet location as a latitude and longitude in radians, and altitude in meters</p>"},{"location":"python_api/skybolt.html#skybolt.LatLonAlt-attributes","title":"Attributes","text":""},{"location":"python_api/skybolt.html#skybolt.LatLonAlt.alt","title":"<code>alt: float</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.LatLonAlt.lat","title":"<code>lat: float</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.LatLonAlt.lon","title":"<code>lon: float</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.LatLonAltPosition","title":"<code>LatLonAltPosition</code>","text":"<p>               Bases: <code>Position</code></p>"},{"location":"python_api/skybolt.html#skybolt.LatLonAltPosition-attributes","title":"Attributes","text":""},{"location":"python_api/skybolt.html#skybolt.LatLonAltPosition.position","title":"<code>position: LatLonAlt</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.LoadTimingPolicy","title":"<code>LoadTimingPolicy</code>","text":"<p>Enum specifying policy for timing of loading data into the renderer</p> <p>Members:</p> <p>LoadAcrossMultipleFrames</p> <p>LoadBeforeRender</p>"},{"location":"python_api/skybolt.html#skybolt.LoadTimingPolicy-attributes","title":"Attributes","text":""},{"location":"python_api/skybolt.html#skybolt.LoadTimingPolicy.LoadAcrossMultipleFrames","title":"<code>LoadAcrossMultipleFrames: LoadTimingPolicy</code>  <code>class-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.LoadTimingPolicy.LoadBeforeRender","title":"<code>LoadBeforeRender: LoadTimingPolicy</code>  <code>class-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.LoadTimingPolicy.name","title":"<code>name: str</code>  <code>property</code>","text":""},{"location":"python_api/skybolt.html#skybolt.LoadTimingPolicy.value","title":"<code>value: int</code>  <code>property</code>","text":""},{"location":"python_api/skybolt.html#skybolt.LtpNedOrientation","title":"<code>LtpNedOrientation</code>","text":"<p>               Bases: <code>Orientation</code></p>"},{"location":"python_api/skybolt.html#skybolt.LtpNedOrientation-attributes","title":"Attributes","text":""},{"location":"python_api/skybolt.html#skybolt.LtpNedOrientation.orientation","title":"<code>orientation: Quaternion</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.MainRotorComponent","title":"<code>MainRotorComponent</code>","text":"<p>               Bases: <code>Component</code></p>"},{"location":"python_api/skybolt.html#skybolt.MainRotorComponent-functions","title":"Functions","text":""},{"location":"python_api/skybolt.html#skybolt.MainRotorComponent.getPitchAngle","title":"<code>getPitchAngle()</code>","text":""},{"location":"python_api/skybolt.html#skybolt.MainRotorComponent.getRotationAngle","title":"<code>getRotationAngle()</code>","text":""},{"location":"python_api/skybolt.html#skybolt.MainRotorComponent.getTppOrientationRelBody","title":"<code>getTppOrientationRelBody()</code>","text":""},{"location":"python_api/skybolt.html#skybolt.MainRotorComponent.setNormalizedRpm","title":"<code>setNormalizedRpm(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.OffscreenWindow","title":"<code>OffscreenWindow</code>","text":"<p>               Bases: <code>Window</code></p>"},{"location":"python_api/skybolt.html#skybolt.Orientation","title":"<code>Orientation</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Position","title":"<code>Position</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Quaternion","title":"<code>Quaternion</code>","text":"<p>Represents an orientation as a quarternion of [x, y, z, w] components</p>"},{"location":"python_api/skybolt.html#skybolt.Quaternion-attributes","title":"Attributes","text":""},{"location":"python_api/skybolt.html#skybolt.Quaternion.w","title":"<code>w: float</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Quaternion.x","title":"<code>x: float</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Quaternion.y","title":"<code>y: float</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Quaternion.z","title":"<code>z: float</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.RectI","title":"<code>RectI</code>","text":"<p>A rectangle defined by [x, y, width, height]</p>"},{"location":"python_api/skybolt.html#skybolt.Scenario","title":"<code>Scenario</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Scenario-attributes","title":"Attributes","text":""},{"location":"python_api/skybolt.html#skybolt.Scenario.currentJulianDate","title":"<code>currentJulianDate: float</code>  <code>property</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Scenario.startJulianDate","title":"<code>startJulianDate: float</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Scenario.time","title":"<code>time: float</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.ScenarioMetadataComponent","title":"<code>ScenarioMetadataComponent</code>","text":"<p>               Bases: <code>Component</code></p>"},{"location":"python_api/skybolt.html#skybolt.ScenarioMetadataComponent-attributes","title":"Attributes","text":""},{"location":"python_api/skybolt.html#skybolt.ScenarioMetadataComponent.deletable","title":"<code>deletable: bool</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.ScenarioMetadataComponent.directory","title":"<code>directory: VectorString</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.ScenarioMetadataComponent.serializable","title":"<code>serializable: bool</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.StandaloneWindow","title":"<code>StandaloneWindow</code>","text":"<p>               Bases: <code>Window</code></p>"},{"location":"python_api/skybolt.html#skybolt.TemplateNameComponent","title":"<code>TemplateNameComponent</code>","text":"<p>               Bases: <code>Component</code></p> <p>A component storing the name of the template which an <code>Entity</code> instantiates</p>"},{"location":"python_api/skybolt.html#skybolt.TemplateNameComponent-attributes","title":"Attributes","text":""},{"location":"python_api/skybolt.html#skybolt.TemplateNameComponent.name","title":"<code>name: str</code>  <code>property</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Vector3","title":"<code>Vector3</code>","text":"<p>A 3D vector of [x, y, z] components</p>"},{"location":"python_api/skybolt.html#skybolt.Vector3-attributes","title":"Attributes","text":""},{"location":"python_api/skybolt.html#skybolt.Vector3.x","title":"<code>x: float</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Vector3.y","title":"<code>y: float</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Vector3.z","title":"<code>z: float</code>  <code>instance-attribute</code>","text":""},{"location":"python_api/skybolt.html#skybolt.VectorString","title":"<code>VectorString</code>","text":""},{"location":"python_api/skybolt.html#skybolt.VectorString-functions","title":"Functions","text":""},{"location":"python_api/skybolt.html#skybolt.VectorString.append","title":"<code>append(x)</code>","text":"<p>Add an item to the end of the list</p>"},{"location":"python_api/skybolt.html#skybolt.VectorString.clear","title":"<code>clear()</code>","text":"<p>Clear the contents</p>"},{"location":"python_api/skybolt.html#skybolt.VectorString.count","title":"<code>count(x)</code>","text":"<p>Return the number of times <code>x</code> appears in the list</p>"},{"location":"python_api/skybolt.html#skybolt.VectorString.insert","title":"<code>insert(i, x)</code>","text":"<p>Insert an item at a given position.</p>"},{"location":"python_api/skybolt.html#skybolt.VectorString.remove","title":"<code>remove(x)</code>","text":"<p>Remove the first item from the list whose value is x. It is an error if there is no such item.</p>"},{"location":"python_api/skybolt.html#skybolt.VisRoot","title":"<code>VisRoot</code>","text":""},{"location":"python_api/skybolt.html#skybolt.VisRoot-functions","title":"Functions","text":""},{"location":"python_api/skybolt.html#skybolt.VisRoot.addWindow","title":"<code>addWindow(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.VisRoot.removeWindow","title":"<code>removeWindow(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.VisRoot.setLoadTimingPolicy","title":"<code>setLoadTimingPolicy(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.Window","title":"<code>Window</code>","text":""},{"location":"python_api/skybolt.html#skybolt.World","title":"<code>World</code>","text":""},{"location":"python_api/skybolt.html#skybolt.World-functions","title":"Functions","text":""},{"location":"python_api/skybolt.html#skybolt.World.addEntity","title":"<code>addEntity(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.World.findObjectByName","title":"<code>findObjectByName(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.World.getEntities","title":"<code>getEntities()</code>","text":""},{"location":"python_api/skybolt.html#skybolt.World.removeAllEntities","title":"<code>removeAllEntities()</code>","text":""},{"location":"python_api/skybolt.html#skybolt.World.removeEntity","title":"<code>removeEntity(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt-functions","title":"Functions","text":""},{"location":"python_api/skybolt.html#skybolt.attachCameraToWindowWithEngine","title":"<code>attachCameraToWindowWithEngine(arg0, arg1, arg2)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.calcSmallestAngleFromTo","title":"<code>calcSmallestAngleFromTo(arg0, arg1)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.createEngineRootWithDefaults","title":"<code>createEngineRootWithDefaults()</code>","text":"<p>Create an EngineRoot with default values</p>"},{"location":"python_api/skybolt.html#skybolt.cross","title":"<code>cross(arg0, arg1)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.dot","title":"<code>dot(arg0, arg1)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.getGlobalEngineRoot","title":"<code>getGlobalEngineRoot()</code>","text":"<p>Get global EngineRoot</p>"},{"location":"python_api/skybolt.html#skybolt.moveDistanceAndBearing","title":"<code>moveDistanceAndBearing(arg0, arg1, arg2)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.normalize","title":"<code>normalize(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.quaternionFromEuler","title":"<code>quaternionFromEuler(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.registerComponent","title":"<code>registerComponent(arg0, arg1)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.render","title":"<code>render(engineRoot, window)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.setGlobalEngineRoot","title":"<code>setGlobalEngineRoot(arg0)</code>","text":"<p>Set global EngineRoot</p>"},{"location":"python_api/skybolt.html#skybolt.setWaveHeight","title":"<code>setWaveHeight(arg0, arg1)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.stepSim","title":"<code>stepSim(arg0, arg1)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.toGeocentricOrientation","title":"<code>toGeocentricOrientation(arg0, arg1)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.toGeocentricPosition","title":"<code>toGeocentricPosition(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.toLatLon","title":"<code>toLatLon(arg0)</code>","text":""},{"location":"python_api/skybolt.html#skybolt.transformToScreenSpace","title":"<code>transformToScreenSpace(arg0, arg1)</code>","text":""},{"location":"python_api/skybolt_util.html","title":"skybolt_util","text":"<p>Utility functionality for working with Skybolt in Python.</p>"},{"location":"python_api/skybolt_util.html#skybolt_util-functions","title":"Functions","text":""},{"location":"python_api/skybolt_util.html#skybolt_util.geocentric_to_lla","title":"<code>geocentric_to_lla(xyz)</code>","text":"<p>Converts a geocentric position <code>Vector3</code> to a <code>LatLonAlt</code></p>"},{"location":"python_api/skybolt_util.html#skybolt_util.lla_to_geocentric","title":"<code>lla_to_geocentric(lla)</code>","text":"<p>Converts a <code>LatLonAlt</code> to a geocentric position <code>Vector3</code></p>"},{"location":"python_api/skybolt_util.html#skybolt_util.rpy_to_geocentric_quat","title":"<code>rpy_to_geocentric_quat(rpy, lat_lon)</code>","text":"<p>Converts a roll, pitch, yaw <code>Vector3</code> to a <code>Quartion</code> at the given <code>LatLonAlt</code> location</p>"},{"location":"python_api/skybolt_util.html#skybolt_util.set_entity_lla","title":"<code>set_entity_lla(entity, lla)</code>","text":"<p>Sets the position of an entity to a latitude, longitude and altitude</p>"},{"location":"python_api/skybolt_util.html#skybolt_util.set_entity_lla_rpy","title":"<code>set_entity_lla_rpy(entity, lla, rpy)</code>","text":"<p>Sets the position of an entity to a latitude, longitude and altitude, and sets the orientation to a roll, pitch, yaw vector.</p>"}]}