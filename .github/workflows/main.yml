name: Build Skybolt
on: [push]
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        include:
          - os: ubuntu-20.04
            python-arch: "x64"
            python-version: "3.7.x" 
            install-headerfiles: true
            prepare-python: true
            gcc-version: "9"

    runs-on: ${{ matrix.os }}
    env:
      buildDir: ${{github.workspace}}/build
    steps:
    - uses: actions/checkout@v2.4.0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.python-arch }}
      if: matrix.prepare-python
    - name: Install C and C++ header files
      run: |
        sudo apt-get update && sudo apt-get install -y gcc-multilib g++-multilib
      if: matrix.install-headerfiles && runner.os == 'Linux'
    - name: Install conan
      run: |
        python3 -m pip install --upgrade pip
        pip3 install "conan>=1.55,<2"
    - name: Configure conan
      run: |
        conan config set general.revisions_enabled=1
    - name: Enable C++11
      run: |
        conan profile new default --detect
        conan profile update settings.compiler.libcxx=libstdc++11 default
    - name: Conan install
      run: |
        export CONAN_SYSREQUIRES_MODE=enabled
        mkdir ${{env.buildDir}}
        cd ${{env.buildDir}}
        conan install ${{github.workspace}} -o openscenegraph-mr:shared=True -o enable_qt=True -o enable_python=True --build=missing -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True
    - name: Cmake build
      run: |
        cd ${{env.buildDir}}
        conan build ${{github.workspace}}
    - name: Cmake test
      run: |
        cd ${{env.buildDir}}
        ctest